{"version":3,"sources":["assets/github-background.svg","styles/global.ts","services/api.ts","assets/logo.svg","pages/Dashboard/styles.ts","pages/Dashboard/index.tsx","pages/Repository/styles.ts","pages/Repository/index.tsx","routes/index.tsx","App.tsx","index.tsx"],"names":["createGlobalStyle","githubBackground","api","axios","create","baseURL","Title","styled","h1","Form","form","props","hasError","css","shade","Error","span","Repositories","div","ButtonClear","button","Loading","Dashboard","React","useState","input","setInput","inputError","setInputError","loading","setLoading","localRepositories","localStorage","getItem","JSON","parse","repositories","setRepositories","event","a","preventDefault","get","response","repository","data","useEffect","setItem","stringify","src","logo","alt","onSubmit","placeholder","value","onChange","target","type","map","to","full_name","owner","avatar_url","login","description","size","id","length","onClick","clear","Header","header","RepositoryInfo","section","Issues","Repository","params","useRouteMatch","setRepository","issues","setIssues","then","stargazers_count","forks_count","open_issues_count","issue","rel","href","html_url","title","user","Routes","path","exact","component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.46571ad7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/github-background.7fa45dda.svg\";","import { createGlobalStyle } from 'styled-components';\n\nimport githubBackground from '../assets/github-background.svg';\n\nexport default createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    outline: 0;\n    box-sizing: border-box;\n  }\n\n  body {\n    background: #F0F0F5 url(${githubBackground}) no-repeat 70% top;\n    -webkit-font-smoothing: antialiased;\n  }\n\n  body, input, button {\n    font: 16px Roboto, sans-serif;\n  }\n\n  #root {\n    max-width: 960px;\n    margin: 0 auto;\n    padding: 40px 20px;\n  }\n\n  button {\n    cursor: pointer;\n  }\n`;\n","import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'https://api.github.com',\n});\n\nexport default api;\n","export default __webpack_public_path__ + \"static/media/logo.469cc31b.svg\";","import styled, { css } from 'styled-components';\nimport { shade } from 'polished';\n\ninterface FormProps {\n  hasError: boolean;\n}\n\nexport const Title = styled.h1`\n  font-size: 48px;\n  color: #3a3a3a;\n  margin-top: 80px;\n  max-width: 450px;\n  line-height: 56px;\n\n  @media (max-width: 900px) {\n    font-size: 24px;\n    text-align: center;\n    margin-top: 20px;\n    line-height: 34px;\n  }\n`;\n\nexport const Form = styled.form<FormProps>`\n  margin-top: 40px;\n  max-width: 700px;\n  display: flex;\n\n  input {\n    height: 70px;\n    padding: 0 24px;\n    flex: 1;\n    border-radius: 5px 0 0 5px;\n    color: #3a3a3a;\n    border: 2px solid #fff;\n\n    ${(props) =>\n      props.hasError &&\n      css`\n        border-color: #c53030;\n        border-right: 0;\n      `}\n\n    &:focus {\n      border: 2px solid #04d361;\n      border-right: 0;\n    }\n\n    &::placeholder {\n      color: #a8a8b3;\n    }\n  }\n\n  button {\n    height: 70px;\n    width: 210px;\n    border: 0;\n    border-radius: 0 5px 5px 0;\n    background: #04d361;\n    color: #fff;\n    font-weight: bold;\n    transition: background 0.2s;\n\n    &:hover {\n      background: ${shade(0.2, '#04d351')};\n    }\n  }\n\n  @media (max-width: 900px) {\n    input {\n      height: 50px;\n      padding: 0px 10px;\n    }\n\n    button {\n      height: 50px;\n      width: 86px;\n    }\n  }\n`;\n\nexport const Error = styled.span`\n  display: block;\n  color: #c53030;\n  margin-top: 8px;\n`;\n\nexport const Repositories = styled.div`\n  margin-top: 80px;\n  max-width: 700px;\n\n  a {\n    background: #fff;\n    border-radius: 5px;\n    width: 100%;\n    padding: 24px;\n    display: flex;\n    text-decoration: none;\n    align-items: center;\n    transition: transform 0.2s, box-shadow 0.2s;\n\n    & + a {\n      margin-top: 16px;\n    }\n\n    &:hover {\n      transform: translateX(15px);\n      box-shadow: 5px 5px 5px 0px rgba(168, 168, 179, 0.75);\n    }\n\n    img {\n      width: 64px;\n      height: 64px;\n      border-radius: 50%;\n    }\n\n    div {\n      margin: 0 16px;\n      flex: 1;\n\n      strong {\n        font-size: 20px;\n        color: #3d3d4d;\n      }\n\n      p {\n        font-size: 18px;\n        color: #a8a8b3;\n        margin-top: 4px;\n      }\n    }\n\n    svg {\n      margin-left: auto;\n      color: #cbcbd6;\n    }\n  }\n\n  @media (max-width: 900px) {\n    margin-top: 60px;\n\n    a {\n      padding: 10px;\n\n      div {\n        margin: 0 8px;\n\n        p {\n          font-size: 16px;\n        }\n      }\n    }\n  }\n`;\n\nexport const ButtonClear = styled.button`\n  margin-top: 80px;\n  height: 70px;\n  width: 210px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border: 0;\n  border-radius: 5px;\n  background: #cbcbd6;\n  color: #fff;\n  font-weight: bold;\n  transition: background 0.2s;\n\n  &:hover {\n    background: ${shade(0.2, '#cbcbd6')};\n  }\n\n  @media (max-width: 900px) {\n    height: 50px;\n    width: 120px;\n    margin: 0 auto;\n    margin-top: 40px;\n  }\n`;\n\nexport const Loading = styled.div`\n  max-width: 700px;\n\n  @keyframes loading {\n    to {\n      transform: rotate(360deg);\n    }\n  }\n\n  span {\n    display: block;\n    width: 50px;\n    height: 50px;\n    border-radius: 50%;\n    border: 10px solid #ccc;\n    border-right-color: transparent;\n    margin: auto;\n    margin-top: 80px;\n    animation: loading 0.8s infinite;\n  }\n`;\n","import React, { FormEvent } from 'react';\nimport { FiChevronRight } from 'react-icons/fi';\nimport { Link } from 'react-router-dom';\n\nimport api from '../../services/api';\nimport logo from '../../assets/logo.svg';\nimport {\n  Title,\n  Form,\n  Repositories,\n  Error,\n  ButtonClear,\n  Loading,\n} from './styles';\n\ninterface Repository {\n  id: number;\n  full_name: string;\n  description: string;\n  owner: {\n    login: string;\n    avatar_url: string;\n  };\n}\n\nconst Dashboard: React.FC = () => {\n  const [input, setInput] = React.useState('');\n  const [inputError, setInputError] = React.useState('');\n  const [loading, setLoading] = React.useState(false);\n  const [repositories, setRepositories] = React.useState<Repository[]>(() => {\n    const localRepositories = localStorage.getItem(\n      '@githubExplorer:repositories',\n    );\n\n    if (localRepositories) {\n      return JSON.parse(localRepositories);\n    }\n\n    return [];\n  });\n\n  React.useEffect(() => {\n    localStorage.setItem(\n      '@githubExplorer:repositories',\n      JSON.stringify(repositories),\n    );\n  }, [repositories]);\n\n  async function handleAddRepository(\n    event: FormEvent<HTMLFormElement>,\n  ): Promise<void> {\n    // Adição de um novo repositório\n    // Consumir API do Github\n    // Salvar novo repositório no estado\n    event.preventDefault();\n    if (!input) {\n      setInputError('Digite o autor/nome do repositório');\n      return;\n    }\n\n    try {\n      setLoading(true);\n      setInputError('');\n      const response = await api.get<Repository>(`repos/${input}`);\n\n      const repository = response.data;\n      setRepositories([...repositories, repository]);\n    } catch (err) {\n      setInputError('Erro na busca por esse repositório');\n    } finally {\n      setLoading(false);\n      setInput('');\n    }\n  }\n\n  function clearLocalStorage(): void {\n    setRepositories([]);\n    localStorage.clear();\n  }\n\n  return (\n    <>\n      <img src={logo} alt=\"Github Explorer\" />\n      <Title>Explore repositórios no Github</Title>\n      <Form hasError={!!inputError} onSubmit={handleAddRepository}>\n        <input\n          placeholder=\"Digite o nome do repositório\"\n          value={input}\n          onChange={({ target }) => setInput(target.value)}\n        />\n        <button type=\"submit\">Pesquisar</button>\n      </Form>\n      {inputError && <Error>{inputError}</Error>}\n      {loading && (\n        <Loading>\n          <span />\n        </Loading>\n      )}\n      <Repositories>\n        {repositories.map((repository) => (\n          <Link key={repository.id} to={`/repository/${repository.full_name}`}>\n            <img\n              src={repository.owner.avatar_url}\n              alt={repository.owner.login}\n            />\n            <div>\n              <strong>{repository.full_name}</strong>\n              <p>{repository.description}</p>\n            </div>\n            <FiChevronRight size={20} />\n          </Link>\n        ))}\n      </Repositories>\n      {repositories.length > 0 && (\n        <ButtonClear onClick={clearLocalStorage}>Limpar</ButtonClear>\n      )}\n    </>\n  );\n};\n\nexport default Dashboard;\n","import styled from 'styled-components';\n\nexport const Header = styled.header`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  a {\n    display: flex;\n    align-items: center;\n    text-decoration: none;\n    color: #a8a8b3;\n    transition: color 0.2s;\n\n    svg {\n      margin-right: 4px;\n    }\n\n    &:hover {\n      color: #666;\n    }\n  }\n`;\n\nexport const RepositoryInfo = styled.section`\n  margin-top: 80px;\n\n  header {\n    display: flex;\n    align-items: center;\n\n    img {\n      height: 120px;\n      width: 120px;\n      border-radius: 50%;\n    }\n\n    div {\n      margin-left: 24px;\n\n      strong {\n        font-size: 36px;\n        color: #3d3d4d;\n      }\n\n      p {\n        font-size: 18px;\n        color: #737380;\n        margin-top: 4px;\n      }\n    }\n  }\n\n  ul {\n    display: flex;\n    list-style: none;\n    margin-top: 40px;\n\n    li {\n      & + li {\n        margin-left: 80px;\n      }\n\n      strong {\n        display: block;\n        font-size: 36px;\n        color: #737380;\n      }\n\n      span {\n        display: block;\n        margin-top: 4px;\n        color: #6c6c80;\n      }\n    }\n  }\n\n  @media (max-width: 900px) {\n    margin-top: 40px;\n\n    header {\n      img {\n        height: 80px;\n        width: 80px;\n      }\n\n      div {\n        margin-left: 12px;\n\n        strong {\n          font-size: 22px;\n        }\n\n        p {\n          font-size: 16px;\n        }\n      }\n    }\n\n    ul {\n      margin-top: 20px;\n\n      li {\n        & + li {\n          margin-left: 20px;\n        }\n\n        strong {\n          font-size: 20px;\n        }\n\n        span {\n          font-size: 18px;\n        }\n      }\n    }\n  }\n`;\n\nexport const Issues = styled.div`\n  margin-top: 80px;\n\n  a {\n    background: #fff;\n    border-radius: 5px;\n    width: 100%;\n    padding: 24px;\n    display: flex;\n    text-decoration: none;\n    align-items: center;\n    transition: transform 0.2s, box-shadow 0.2s;\n\n    & + a {\n      margin-top: 16px;\n    }\n\n    &:hover {\n      transform: translateX(15px);\n      box-shadow: 5px 5px 5px 0px rgba(168, 168, 179, 0.75);\n    }\n\n    div {\n      margin: 0 16px;\n      flex: 1;\n\n      strong {\n        font-size: 20px;\n        color: #3d3d4d;\n      }\n\n      p {\n        font-size: 18px;\n        color: #a8a8b3;\n        margin-top: 4px;\n      }\n    }\n\n    svg {\n      margin-left: auto;\n      color: #cbcbd6;\n    }\n  }\n\n  @media (max-width: 900px) {\n    margin-top: 40px;\n\n    a {\n      padding: 10px;\n\n      div {\n        margin: 0 8px;\n\n        strong {\n          word-break: break-word;\n        }\n\n        p {\n          font-size: 16px;\n        }\n      }\n    }\n  }\n`;\n\nexport const Loading = styled.div`\n  width: 50px;\n  height: 50px;\n  border-radius: 50%;\n  border: 10px solid #ccc;\n  border-right-color: transparent;\n  margin: auto;\n  margin-top: 100px;\n  animation: loading 0.8s infinite;\n\n  @keyframes loading {\n    to {\n      transform: rotate(360deg);\n    }\n  }\n`;\n","import React from 'react';\nimport { useRouteMatch, Link } from 'react-router-dom';\nimport { FiChevronLeft, FiChevronRight } from 'react-icons/fi';\n\nimport api from '../../services/api';\nimport logo from '../../assets/logo.svg';\n\nimport { Header, RepositoryInfo, Issues, Loading } from './styles';\n\ninterface RepositoryParams {\n  params: {\n    repository: string;\n  };\n}\n\ninterface Repository {\n  stargazers_count: number;\n  forks_count: number;\n  open_issues_count: number;\n  id: number;\n  full_name: string;\n  description: string;\n  owner: {\n    login: string;\n    avatar_url: string;\n  };\n}\n\ninterface Issue {\n  id: number;\n  title: string;\n  html_url: string;\n  user: {\n    login: string;\n  };\n}\n\nconst Repository: React.FC = () => {\n  const { params }: RepositoryParams = useRouteMatch();\n  const [repository, setRepository] = React.useState<Repository | null>(null);\n  const [issues, setIssues] = React.useState<Issue[]>([]);\n\n  React.useEffect(() => {\n    api.get(`repos/${params.repository}`).then((response) => {\n      setRepository(response.data);\n    });\n\n    api.get(`repos/${params.repository}/issues`).then((response) => {\n      setIssues(response.data);\n    });\n\n    // async function loadData(): Promise<void> {\n    //   const repositoryApi = await api.get(`repos/${params.repository}`);\n    //   const issuesApi = await api.get(`repos/${params.repository}/issues`);\n\n    //   const [repositoryApi, issuesApi] = await Promise.all([\n    //     api.get(`repos/${params.repository}`),\n    //     api.get(`repos/${params.repository}/issues`),\n    //   ]);\n    // }\n    // loadData();\n  }, [params.repository]);\n\n  return (\n    <>\n      <Header>\n        <img src={logo} alt=\"Github Explorer\" />\n        <Link to=\"/github-explorer\">\n          <FiChevronLeft size={16} />\n          Voltar\n        </Link>\n      </Header>\n      {repository ? (\n        <RepositoryInfo>\n          <header>\n            <img\n              src={repository.owner.avatar_url}\n              alt={repository.owner.login}\n            />\n            <div>\n              <strong>{repository.full_name}</strong>\n              <p>{repository.description}</p>\n            </div>\n          </header>\n          <ul>\n            <li>\n              <strong>{repository.stargazers_count}</strong>\n              <span>Stars</span>\n            </li>\n            <li>\n              <strong>{repository.forks_count}</strong>\n              <span>Forks</span>\n            </li>\n            <li>\n              <strong>{repository.open_issues_count}</strong>\n              <span>Issues abertas</span>\n            </li>\n          </ul>\n        </RepositoryInfo>\n      ) : (\n        <Loading />\n      )}\n      <Issues>\n        {issues.map((issue) => (\n          <a\n            target=\"_blank\"\n            rel=\"noreferrer\"\n            key={issue.id}\n            href={issue.html_url}\n          >\n            <div>\n              <strong>{issue.title}</strong>\n              <p>{issue.user.login}</p>\n            </div>\n            <FiChevronRight size={20} />\n          </a>\n        ))}\n      </Issues>\n    </>\n  );\n};\n\nexport default Repository;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport Dashboard from '../pages/Dashboard/index';\nimport Repository from '../pages/Repository/index';\n\nconst Routes: React.FC = () => (\n  <Switch>\n    <Route path=\"/github-explorer\" exact component={Dashboard} />\n    <Route path=\"/repository/:repository+\" component={Repository} />\n  </Switch>\n);\n\nexport default Routes;\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport GlobalStyle from './styles/global';\nimport Routes from './routes';\n\nconst App: React.FC = () => (\n  <>\n    <BrowserRouter>\n      <Routes />\n    </BrowserRouter>\n    <GlobalStyle />\n  </>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}